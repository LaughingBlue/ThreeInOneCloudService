//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebRole1.toolsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="toolsServiceReference.IWCF_CloudRandomService")]
    public interface IWCF_CloudRandomService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/randomInt", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/randomIntResponse")]
        int[] randomInt(int min, int max, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/randomInt", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/randomIntResponse")]
        System.Threading.Tasks.Task<int[]> randomIntAsync(int min, int max, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/randomOnlyAlphabet", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/randomOnlyAlphabetResponse")]
        string randomOnlyAlphabet(int length, int quantity, bool lowerCase, bool capital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/randomOnlyAlphabet", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/randomOnlyAlphabetResponse")]
        System.Threading.Tasks.Task<string> randomOnlyAlphabetAsync(int length, int quantity, bool lowerCase, bool capital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/GetRandomStringByPassword", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/GetRandomStringByPasswordResponse")]
        string GetRandomStringByPassword(int length, int quantity, int nonAlphaCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/GetRandomStringByPassword", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/GetRandomStringByPasswordResponse")]
        System.Threading.Tasks.Task<string> GetRandomStringByPasswordAsync(int length, int quantity, int nonAlphaCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/digitConvert", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/digitConvertResponse")]
        string digitConvert(string value, int fromBase, int toBase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_CloudRandomService/digitConvert", ReplyAction="http://tempuri.org/IWCF_CloudRandomService/digitConvertResponse")]
        System.Threading.Tasks.Task<string> digitConvertAsync(string value, int fromBase, int toBase);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCF_CloudRandomServiceChannel : WebRole1.toolsServiceReference.IWCF_CloudRandomService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCF_CloudRandomServiceClient : System.ServiceModel.ClientBase<WebRole1.toolsServiceReference.IWCF_CloudRandomService>, WebRole1.toolsServiceReference.IWCF_CloudRandomService {
        
        public WCF_CloudRandomServiceClient() {
        }
        
        public WCF_CloudRandomServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCF_CloudRandomServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_CloudRandomServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_CloudRandomServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[] randomInt(int min, int max, int quantity) {
            return base.Channel.randomInt(min, max, quantity);
        }
        
        public System.Threading.Tasks.Task<int[]> randomIntAsync(int min, int max, int quantity) {
            return base.Channel.randomIntAsync(min, max, quantity);
        }
        
        public string randomOnlyAlphabet(int length, int quantity, bool lowerCase, bool capital) {
            return base.Channel.randomOnlyAlphabet(length, quantity, lowerCase, capital);
        }
        
        public System.Threading.Tasks.Task<string> randomOnlyAlphabetAsync(int length, int quantity, bool lowerCase, bool capital) {
            return base.Channel.randomOnlyAlphabetAsync(length, quantity, lowerCase, capital);
        }
        
        public string GetRandomStringByPassword(int length, int quantity, int nonAlphaCount) {
            return base.Channel.GetRandomStringByPassword(length, quantity, nonAlphaCount);
        }
        
        public System.Threading.Tasks.Task<string> GetRandomStringByPasswordAsync(int length, int quantity, int nonAlphaCount) {
            return base.Channel.GetRandomStringByPasswordAsync(length, quantity, nonAlphaCount);
        }
        
        public string digitConvert(string value, int fromBase, int toBase) {
            return base.Channel.digitConvert(value, fromBase, toBase);
        }
        
        public System.Threading.Tasks.Task<string> digitConvertAsync(string value, int fromBase, int toBase) {
            return base.Channel.digitConvertAsync(value, fromBase, toBase);
        }
    }
}
